# vim:ft=ansible:
---
- name: "Create config dirs"
  become: yes
  file:
    state: directory
    path: "/home/{{ home_assistant_user }}/.homeassistant/{{ item }}"
    owner: "{{ home_assistant_user }}"
    group: "{{ home_assistant_user }}"
  with_items:
    - group
    - automation

- name: "Copy ps4 sensor script"
  become: yes
  copy:
    src: ps4_sensor.py
    dest: "{{ home_assistant_cfg_dir }}/ps4_sensor.py"
    owner: "{{ home_assistant_user }}"
    group: "{{ home_assistant_user }}"
    mode: u+x

- name: Create home assistant DB in influxdb
  influxdb_database:
      hostname: "{{ home_assistant_influxdb_host }}"
      database_name: "{{ hass_influxdb_database }}"
      state: present
  when: hass_influxdb_enabled

- name: "Deploy home assistant group templates"
  become: yes
  template:
    src: "{{ item.src }}"
    dest: "/home/{{ home_assistant_user }}/.homeassistant/group/{{ item.path }}"
    owner: "{{ home_assistant_user }}"
    group: "{{ home_assistant_user }}"
    block_start_string: "{{ item.block_start | default('<%') }}"
    block_end_string: "{{ item.block_end | default('%>') }}"
    variable_start_string: "{{ item.variable_start | default('<<') }}"
    variable_end_string: "{{ item.variable_end | default('>>') }}"
  with_filetree: "{{ hass_config_dir }}/group"
  tags: 
    - hass_deploy_cfg
    - hass_deploy_groups

  notify:
    - Check homeassistant config
    - Reload group config

- name: "Deploy home assistant automation templates"
  become: yes
  template:
    src: "{{ hass_automation_templates.src_path }}/{{ item.name }}"
    dest: "/home/{{ home_assistant_user }}/.homeassistant/automation/{{ item.name }}"
    owner: "{{ home_assistant_user }}"
    group: "{{ home_assistant_user }}"
    block_start_string: "{{ item.block_start | default('<%') }}"
    block_end_string: "{{ item.block_end | default('%>') }}"
    variable_start_string: "{{ item.variable_start | default('<<') }}"
    variable_end_string: "{{ item.variable_end | default('>>') }}"
  with_items: "{{ hass_automation_templates.names }}"
  tags: hass_deploy_cfg
  notify:
    - Check homeassistant config
    - Reload automation config

- name: "Deploy home assistant customizations templates"
  become: yes
  template:
    src: "{{ hass_customization_templates.src_path }}/{{ item.name }}"
    dest: "/home/{{ home_assistant_user }}/.homeassistant/{{ item.name }}"
    owner: "{{ home_assistant_user }}"
    group: "{{ home_assistant_user }}"
    block_start_string: "{{ item.block_start | default('<%') }}"
    block_end_string: "{{ item.block_end | default('%>') }}"
    variable_start_string: "{{ item.variable_start | default('<<') }}"
    variable_end_string: "{{ item.variable_end | default('>>') }}"
  with_items: "{{ hass_customization_templates.names }}"
  tags: hass_deploy_cfg
  notify:
    - Check homeassistant config
    - Reload core config

- name: "Deploy home assistant script templates"
  become: yes
  template:
    src: "{{ hass_script_templates.src_path }}/{{ item.name }}"
    dest: "/home/{{ home_assistant_user }}/.homeassistant/{{ item.name }}"
    owner: "{{ home_assistant_user }}"
    group: "{{ home_assistant_user }}"
    block_start_string: "{{ item.block_start | default('<%') }}"
    block_end_string: "{{ item.block_end | default('%>') }}"
    variable_start_string: "{{ item.variable_start | default('<<') }}"
    variable_end_string: "{{ item.variable_end | default('>>') }}"
  with_items: "{{ hass_script_templates.names }}"
  tags: hass_deploy_cfg
  notify:
    - Check homeassistant config
    - Reload script config

- name: "Deploy home assistant config templates"
  become: yes
  template:
    src: "{{ hass_config_templates.src_path }}/{{ item.name }}"
    dest: "/home/{{ home_assistant_user }}/.homeassistant/{{ item.name }}"
    owner: "{{ home_assistant_user }}"
    group: "{{ home_assistant_user }}"
    block_start_string: "{{ item.block_start | default('<%') }}"
    block_end_string: "{{ item.block_end | default('%>') }}"
    variable_start_string: "{{ item.variable_start | default('<<') }}"
    variable_end_string: "{{ item.variable_end | default('>>') }}"
  with_items: "{{ hass_config_templates.names }}"
  tags: hass_deploy_cfg
  notify:
    - Check homeassistant config
    - restart home assistant container

- name: "Deploy home assistant secrets template"
  become: yes
  template:
    src: "{{ home_assistant_secrets_file }}"
    dest: "/home/{{ home_assistant_user }}/.homeassistant/secrets.yaml"
  tags: hass_deploy_cfg
  notify:
    - Check homeassistant config
    - restart home assistant container
  when: home_assistant_secrets_file is defined
